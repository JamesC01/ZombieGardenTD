11/02/2024

Include easter eggs, or just fun stuff like you'd expect in demo-scene software, or just
older software in-general. Partially done with right click confetti, but adding some more
could be fun. Maybe some fun things in the menu once that is done.

Make a B section to music, add more transitional elements, and make drums quieter, and make certain
drum parts less busy.

Improve max FPS. Right now it seems like rendering is limiting the frame rate quite a bit, see if you can
figure out why (just for fun.)

Continue tweaking zombie waves/difficulty curve

Fix the peas not colliding off screen again.

Add hit flash to zombies and maybe plants when they're being eaten.

Add something that indicates a wave is happening.

Consider trying to design more unique sprites. Maybe sketch on paper some ideas first. But try to deviate
a bit from plants vs zombies.

Allow particles to use textures, and make some simple textures like sparkles

Make sound effects for:
    Picking up a sun
    the zombie eating plants
    a gameover sound/fanfare
    a wave start sound/fanfare


Improve look of title/gameover screen. Pretty bland right now.

Consider adding different fade curves to particles


Figure out why there's sound latency after playing game for a while.

Add a debug menus with things like giving yourself extra sun, or spawning zombies, just think of all
of the things that are tedious for testing, and put them in a menu

Make headless zombies fadeout much quicker (they should stay on screen a bit longer)

Do sun sprite properly.

Fix bug when right-clicking and holding seedpacket where it hides the cursor

Consider rotating zombies to make it look like they're walking a bit more

Consider trying to fix the zombie heads from going behind zombies on the row above it. Would need like a Y-sort
type of thing, but I'm not sure how I'd handle that.

Figure out why zombies on lower rows are sometimes rendering behind zombies above them

Made the pea hitting the zombies sound more like the real pvz

y sorting could work by having an array of sprite structs, that contain the information we would usually pass to a
Draw function. Instead, we can pass it to the struct that is in an array of sprites. Each sprite struct would have
a priority or layer, and a bool to say if it has been draw or not (this bool would make it so the array doesn't have
to be zeroed to reset everything). Then at the end of everything, the sprite array could be sorted by the priority
of each sprite, and then drawn in order.

I got this idea by skimming the keen dreams source code. I'm not sure that they're doing this exactly, but I at least
got this idea.
